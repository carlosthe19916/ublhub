package io.github.project.openubl.ublhub.ubl.content.ruleunits;
unit InvoiceUnit;

import java.time.LocalDate;
import java.time.LocalTime;

import io.github.project.openubl.ublhub.ubl.content.catalogs.Catalog1_Invoice;
import io.github.project.openubl.ublhub.ubl.content.catalogs.CatalogContadoCredito;

import io.github.project.openubl.ublhub.ubl.content.models.common.Firmante;
import io.github.project.openubl.ublhub.ubl.content.models.standard.general.BoletaFactura;

// Queries
query boletaFactura
    $i: /invoice
end

// General
rule "¿Documento requiere moneda?" when
    $i: /invoice[ moneda == null ]
then
    modify($i) {
        moneda = "PEN"
    };
end

rule "¿Documento requiere fecha?" when
    $i: /invoice[ fechaEmision == null ]
then
    modify($i) {
        fechaEmision = LocalDate.now();
    };
end

//rule "¿Documento requiere hora de emisión?" when
//    $i: /invoice[ horaEmision == null ]
//then
//    modify($i) {
//        horaEmision = LocalTime.now();
//    };
//end

rule "¿Documento requiere tipo de invoice (comprobante)?" when
    $i: /invoice[ tipoComprobante == null, serie != null ]
then
    String newTipoComprobante = null;
    if ($i.serie.matches("^[F|f].*$")) {
        newTipoComprobante = Catalog1_Invoice.FACTURA.getCode();
    } else if ($i.serie.matches("^[B|b].*$")) {
        newTipoComprobante = Catalog1_Invoice.BOLETA.getCode();
    }

    modify($i) {
        tipoComprobante = newTipoComprobante
    };
end

rule "¿Documento requiere forma de pago?" when
    $i: /invoice[ formaDePago == null  ]
then
    String newFormaDePago = $i.formaDePagoCuotas == null || $i.formaDePagoCuotas.isEmpty() ?
        CatalogContadoCredito.CONTADO.getCode() :
        CatalogContadoCredito.CREDITO.getCode();
    modify($i) {
        formaDePago = newFormaDePago;
    };
end

// Firmante
rule "¿Documento Requiere firmante?" when
    $i: /invoice[ firmante == null, proveedor != null ]
then
    Firmante newFirmante = new Firmante();
    newFirmante.ruc = $i.proveedor.ruc;
    newFirmante.razonSocial = $i.proveedor.razonSocial;

    $i.firmante = newFirmante;
end

// Proveedor
rule "¿Proveedor Requiere dirección?" when
    $d: /invoice/proveedor/direccion[ codigoLocal == null ]
then
    $d.codigoLocal = "0000";
end
