version: "3"

services:
  keycloak:
    image: quay.io/keycloak/keycloak:12.0.3
    ports:
      - 8180:8080
    environment:
      KEYCLOAK_USER: admin
      KEYCLOAK_PASSWORD: admin
      KEYCLOAK_IMPORT: /tmp/openubl-realm.json
      DB_VENDOR: h2
    volumes:
      - ./src/test/resources/openubl-realm.json:/tmp/openubl-realm.json:z
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/auth"]
      interval: 10s
      timeout: 5s
      retries: 5

  zookeeper:
    image: quay.io/strimzi/kafka:0.21.1-kafka-2.7.0
    command: [
        "sh", "-c",
        "bin/zookeeper-server-start.sh config/zookeeper.properties"
    ]
    ports:
      - "2181:2181"
    environment:
      LOG_DIR: /tmp/logs
    healthcheck:
      test: [ "CMD-SHELL", "nc -z localhost 2181 || exit -1" ]
      interval: 5s
      timeout: 10s
      retries: 3

  kafka:
    image: quay.io/strimzi/kafka:0.21.1-kafka-2.7.0
    command: [
        "sh", "-c",
        "bin/kafka-server-start.sh config/server.properties --override listeners=$${KAFKA_LISTENERS} --override advertised.listeners=$${KAFKA_ADVERTISED_LISTENERS} --override zookeeper.connect=$${KAFKA_ZOOKEEPER_CONNECT}"
    ]
    ports:
      - "9092:9092"
    environment:
      LOG_DIR: "/tmp/logs"
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
    healthcheck:
      test: [ "CMD-SHELL", "nc -z localhost 9092 || exit -1" ]
      interval: 5s
      timeout: 10s
      retries: 3
    depends_on:
      zookeeper:
        condition: service_healthy

  schema-registry:
    image: quay.io/apicurio/apicurio-registry-mem:1.3.2.Final
    ports:
      - 8081:8080
    depends_on:
      kafka:
        condition: service_healthy
    environment:
      QUARKUS_PROFILE: prod
      KAFKA_BOOTSTRAP_SERVERS: localhost:9092
      APPLICATION_ID: registry_id
      APPLICATION_SERVER: localhost:9000

  xsender-db:
    image: postgres:13.1
    ports:
      - 5432:5432
    environment:
      POSTGRES_DB: xsender_db
      POSTGRES_USER: xsender_username
      POSTGRES_PASSWORD: xsender_password
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U user -d xsender_db" ]
      interval: 10s
      timeout: 5s
      retries: 5

